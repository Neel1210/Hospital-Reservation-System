/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagmentsystem.gui;


import hospitalmanagementsystem.utility.BulkSmsApi;
import hospitalmanagementsystem.utility.SmsApi;
import hospitalmanagmentsystem.dao.AppointmentDao;
import hospitalmanagmentsystem.pojo.AppointmentPojo;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author spsub
 */
public class ConformAppointment extends javax.swing.JFrame {

    /**
     * Creates new form ConformAppointment
     */
    private LocalDateTime ldt;
    private String date;
    private AppointmentPojo appointment;
    private SmsApi BSApi;

    public ConformAppointment() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    
    
    public ConformAppointment(AppointmentPojo appointment) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.appointment = appointment;
        txtPatientId.setText(appointment.getPatientId());
        txtPatientName.setText(appointment.getPatientName());
        txtOpd.setText(appointment.getOpd());
        txtAppointmentDate.setText(appointment.getAppointmentDate());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnConform = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        BtnCancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        dateSpinner = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        txtPatientId = new javax.swing.JTextField();
        txtAppointmentDate = new javax.swing.JTextField();
        txtOpd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conform Appointment Frame");
        setAlwaysOnTop(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(234, 243, 250));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setForeground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Appointment Confirmation");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 34));

        btnConform.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnConform.setForeground(new java.awt.Color(0, 153, 153));
        btnConform.setText("Confirm");
        btnConform.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConformActionPerformed(evt);
            }
        });
        jPanel1.add(btnConform, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, 225, -1));

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(0, 153, 153));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 144, -1));

        BtnCancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BtnCancel.setForeground(new java.awt.Color(0, 153, 153));
        BtnCancel.setText("Cancel");
        BtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(BtnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 190, 128, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Appointment Scheduled -");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, 24));

        dateSpinner.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dateSpinner.setModel(new javax.swing.SpinnerDateModel());
        dateSpinner.setAutoscrolls(true);
        dateSpinner.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(dateSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 796, -1));

        jPanel2.setBackground(new java.awt.Color(234, 243, 250));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Patient ID");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Appointment Date");

        txtPatientName.setEditable(false);
        txtPatientName.setBackground(new java.awt.Color(204, 224, 251));
        txtPatientName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtPatientId.setEditable(false);
        txtPatientId.setBackground(new java.awt.Color(204, 224, 251));
        txtPatientId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtAppointmentDate.setEditable(false);
        txtAppointmentDate.setBackground(new java.awt.Color(204, 224, 251));
        txtAppointmentDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtOpd.setEditable(false);
        txtOpd.setBackground(new java.awt.Color(204, 224, 251));
        txtOpd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Patient Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("OPD");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtOpd, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(txtPatientId))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPatientName)
                    .addComponent(txtAppointmentDate))
                .addGap(13, 13, 13))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtOpd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 970, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 990, 230));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Luminari", 1, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Sanjeevani  Application ");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, -1, 50));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 523, 12));

        jSeparator1.setBackground(new java.awt.Color(250, 248, 196));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 550, 70));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospitalmanagmentsystem/icon/HomePageBG.jpg"))); // NOI18N
        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -230, 1010, 700));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1010, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        AppointmentsRequestFrame arf = new AppointmentsRequestFrame();
        arf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnConformActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConformActionPerformed

        //message for api
        String message;

        //        String message;
        //        message = "Appintment Conformation Hello " + appointment.getPatientName()+"your appointment with Dr "+appointment.getDoctorName()+" on "+appointment.getAppointmentDate()+" has been confirmed";

        System.out.println(dateSpinner.getModel().getValue());
        ldt = LocalDateTime.parse(dateSpinner.getModel().getValue().toString(), DateTimeFormatter.ofPattern("E MMM dd HH:mm:ss z yyyy"));
        date = ldt.format(DateTimeFormatter.ofPattern("dd/MMM/yyyy hh:mm a"));
        System.out.println("appointment schedule at : "+date);
        // type message to be send to the patient
        //        LocalDateTime curr = LocalDateTime.now();
        //        String currDate = curr.format(DateTimeFormatter.ofPattern("dd/MMM/yyyy hh:mm a"));
        System.out.println(ldt.compareTo(LocalDateTime.now()));

        if(ldt.compareTo(LocalDateTime.now()) > 0){
            appointment.setAppointmentDate(ldt.format(DateTimeFormatter.ofPattern("dd/MMM/yyyy hh:mm a")));
            appointment.setStatus("CONFORM");

            //            if(appointment.getStatus() == null || appointment.getStatus().equalsIgnoreCase("REQUEST"))
            //                return;
            //
            try {

                System.out.println(appointment);

                boolean isConform = AppointmentDao.updateAppointmentsByPatientId(appointment);

                if(isConform){
                    System.out.println("appointment schedule successfully.");
                    //JOptionPane.showMessageDialog(null, "Appointment Schedule Successfully.!!", "Information", JOptionPane.INFORMATION_MESSAGE);
                    System.out.println("This message is send through the api.");
                    message = "Hello "+appointment.getPatientName()+",\n"
                    +"Your appointment is scheduled at "+appointment.getAppointmentDate()+".\n"
                    + "By "+appointment.getDoctorName();
                    BSApi = new BulkSmsApi();
                    BSApi.sendMessage(appointment.getMobileNo(), message);
                    //                    if(!BSApi.sendMessage(appointment.getMobileNo(), message)){
                        //                       System.out.println(message);
                        //                    }
                }
                else{
                    System.out.println("can't schedule the appointment now.");
                }
                AppointmentFrame arf = new AppointmentFrame();
                arf.setVisible(true);
                this.dispose();

            } catch (SQLException ex) {
                System.out.println("Could not schedule the appoiment right now. try again.");
                ex.printStackTrace();
            } catch (Exception ex) {
                System.out.println("can't cannot to the api right now.");
            }

        }
        else{
            System.out.println("please enter the correct date.");
        }

        // send sms to conform the patient appointment from here.

    }//GEN-LAST:event_btnConformActionPerformed

    private void BtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelActionPerformed
        try {
            // TODO add your handling code here:
            ldt = LocalDateTime.parse(dateSpinner.getModel().getValue().toString(), DateTimeFormatter.ofPattern("E MMM dd HH:mm:ss z yyyy"));
            date = ldt.format(DateTimeFormatter.ofPattern("dd/MMM/yyyy hh:mm a"));
            System.out.println("appointment schedule at : "+date);

            appointment.setAppointmentDate(ldt.format(DateTimeFormatter.ofPattern("dd/MMM/yyyy hh:mm a")));
            appointment.setStatus("CANCEL");
            System.out.println(appointment);
            boolean isConform = AppointmentDao.updateAppointmentsByPatientId(appointment);
            if(isConform){
                System.out.println("appointment schedule successfully.");
                //JOptionPane.showMessageDialog(null, "Appointment Cancel Successfully.!!", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                System.out.println("can't cancel schedule the appointment now.");
                //                    throw new SQLException();
            }
            AppointmentsRequestFrame arf = new AppointmentsRequestFrame();
            arf.setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_BtnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConformAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConformAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConformAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConformAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConformAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCancel;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConform;
    private javax.swing.JSpinner dateSpinner;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField txtAppointmentDate;
    private javax.swing.JTextField txtOpd;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPatientName;
    // End of variables declaration//GEN-END:variables

    
}
